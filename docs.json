[{"name":"Prima.Pyxis.Accordion.Accordion","comment":" Creates an Accordion component by using predefined Html syntax.\n\n\n# Configuration\n\n@docs Config, State\n\n\n# Configuration Helpers\n\n@docs baseConfig, lightConfig, darkConfig, state\n\n\n# Helpers\n\n@docs open, close\n\n\n# Render\n\n@docs render\n\n","unions":[{"name":"Config","comment":" Represents the static configuration of the component. Values\npassed in are no more modified by the setter.\n","args":["msg"],"cases":[]},{"name":"State","comment":" Represents the state of the component. Values passed in are\nsusceptible to change.\n","args":["msg"],"cases":[]}],"aliases":[],"values":[{"name":"baseConfig","comment":" Returns the configuration for a Base accordion skin.\n\n    ...\n\n    type alias Slug =\n        String\n\n    type Msg =\n        Toggled Slug Bool\n\n    ...\n\n    myAccordionConfig : Accordion.Config\n    myAccordionConfig =\n    let\n        slug =\n            \"my_accordion_slug\"\n\n        tagger =\n            Toggled\n    in\n        Accordion.baseConfig slug tagger\n\n    ...\n\n","type":"String.String -> (String.String -> Basics.Bool -> msg) -> Prima.Pyxis.Accordion.Accordion.Config msg"},{"name":"close","comment":" Closes the Accordion to hide it's content.\n\n    updatedAccordionState =\n        Accordion.close myAccordionState\n\n","type":"Prima.Pyxis.Accordion.Accordion.State msg -> Prima.Pyxis.Accordion.Accordion.State msg"},{"name":"darkConfig","comment":" The same as baseConfig but with a Dark skin.\n","type":"String.String -> (String.String -> Basics.Bool -> msg) -> Prima.Pyxis.Accordion.Accordion.Config msg"},{"name":"lightConfig","comment":" The same as baseConfig but with a Light skin.\n","type":"String.String -> (String.String -> Basics.Bool -> msg) -> Prima.Pyxis.Accordion.Accordion.Config msg"},{"name":"open","comment":" Opens the Accordion to reveal it's content.\n\n    updatedAccordionState =\n        Accordion.open myAccordionState\n\n","type":"Prima.Pyxis.Accordion.Accordion.State msg -> Prima.Pyxis.Accordion.Accordion.State msg"},{"name":"render","comment":" Renders the Accordion component by receiving is State and Config.\n\n    Accordion.render myAccordionState myAccordionConfiguration\n\n","type":"Prima.Pyxis.Accordion.Accordion.State msg -> Prima.Pyxis.Accordion.Accordion.Config msg -> Html.Html msg"},{"name":"state","comment":" Returns the basic state of the component.\n\n    ...\n\n    myAccordionState : Accordion.State\n    myAccordionState =\n        let\n            isOpen =\n                False\n\n            title =\n                \"My title\"\n\n            content =\n                (List.singleton <<  text) \"Lorem ipsum dolor sit amet.\"\n        in\n        Accordion.state isOpen title content\n\n    ...\n\n","type":"Basics.Bool -> String.String -> List.List (Html.Html msg) -> Prima.Pyxis.Accordion.Accordion.State msg"}],"binops":[]},{"name":"Prima.Pyxis.AtrTable.AtrTable","comment":" Creates a specific kind of table, the ATR table component.\nUses Prima.Pyxis.Table.Table under the hood.\n\nWarning. This documentation requires knownledge of Insurance domain.\n\n\n# Configuration\n\n@docs Config, AtrDetail, Msg\n\n\n# Configuration Helpers\n\n@docs init, atr, update\n\n\n# Helpers\n\n@docs paritaria, paritariaMista, paritariaCose, paritariaPersone, principale, principaleMista, principaleCose, principalePersone\n\n\n# Render\n\n@docs render\n\n","unions":[{"name":"AtrDetail","comment":" Represents a detail for an ATR which contains information about\nthe number of accidents in a specific year.\n","args":[],"cases":[]},{"name":"Config","comment":" Defines the configuration of an Atr table\n","args":[],"cases":[]},{"name":"Msg","comment":" Represents a changing AtrDetail action\n","args":[],"cases":[]}],"aliases":[],"values":[{"name":"atr","comment":" Creates an empty AtrDetail. Each detail is identified by an year and representation of accidents occurred\nduring it. All setters methods are pipeable.\n","type":"Basics.Int -> Prima.Pyxis.AtrTable.AtrTable.AtrDetail"},{"name":"init","comment":" Returns a Tuple containing the Config and a possible batch of side effects to\nbe managed by parent application. Requires a list of AtrDetail.\n","type":"List.List Prima.Pyxis.AtrTable.AtrTable.AtrDetail -> ( Prima.Pyxis.AtrTable.AtrTable.Config, Platform.Cmd.Cmd Prima.Pyxis.AtrTable.AtrTable.Msg )"},{"name":"paritaria","comment":" Sets the Responsabilità Paritaria value for a specific AtrDetail.\n","type":"Maybe.Maybe String.String -> Prima.Pyxis.AtrTable.AtrTable.AtrDetail -> Prima.Pyxis.AtrTable.AtrTable.AtrDetail"},{"name":"paritariaCose","comment":" Sets the Responsabilità Paritaria Cose value for a specific AtrDetail.\n","type":"Maybe.Maybe String.String -> Prima.Pyxis.AtrTable.AtrTable.AtrDetail -> Prima.Pyxis.AtrTable.AtrTable.AtrDetail"},{"name":"paritariaMista","comment":" Sets the Responsabilità Paritaria Mista value for a specific AtrDetail.\n","type":"Maybe.Maybe String.String -> Prima.Pyxis.AtrTable.AtrTable.AtrDetail -> Prima.Pyxis.AtrTable.AtrTable.AtrDetail"},{"name":"paritariaPersone","comment":" Sets the Responsabilità Paritaria Persone value for a specific AtrDetail.\n","type":"Maybe.Maybe String.String -> Prima.Pyxis.AtrTable.AtrTable.AtrDetail -> Prima.Pyxis.AtrTable.AtrTable.AtrDetail"},{"name":"principale","comment":" Sets the Responsabilità Principale value for a specific AtrDetail.\n","type":"Maybe.Maybe String.String -> Prima.Pyxis.AtrTable.AtrTable.AtrDetail -> Prima.Pyxis.AtrTable.AtrTable.AtrDetail"},{"name":"principaleCose","comment":" Sets the Responsabilità Principale Cose value for a specific AtrDetail.\n","type":"Maybe.Maybe String.String -> Prima.Pyxis.AtrTable.AtrTable.AtrDetail -> Prima.Pyxis.AtrTable.AtrTable.AtrDetail"},{"name":"principaleMista","comment":" Sets the Responsabilità Principale Mista value for a specific AtrDetail.\n","type":"Maybe.Maybe String.String -> Prima.Pyxis.AtrTable.AtrTable.AtrDetail -> Prima.Pyxis.AtrTable.AtrTable.AtrDetail"},{"name":"principalePersone","comment":" Sets the Responsabilità Principale Persone value for a specific AtrDetail.\n","type":"Maybe.Maybe String.String -> Prima.Pyxis.AtrTable.AtrTable.AtrDetail -> Prima.Pyxis.AtrTable.AtrTable.AtrDetail"},{"name":"render","comment":" Renders the table by receiving a Configuration. The columns of this table are expressed by the length of the AtrDetail list.\n","type":"Prima.Pyxis.AtrTable.AtrTable.Config -> Html.Html Prima.Pyxis.AtrTable.AtrTable.Msg"},{"name":"update","comment":" Updates the configuration of the Atr table.\nReturns a tuple containing the new Config.\n","type":"Prima.Pyxis.AtrTable.AtrTable.Msg -> Prima.Pyxis.AtrTable.AtrTable.Config -> ( Prima.Pyxis.AtrTable.AtrTable.Config, Platform.Cmd.Cmd Prima.Pyxis.AtrTable.AtrTable.Msg, List.List Prima.Pyxis.AtrTable.AtrTable.AtrDetail )"}],"binops":[]},{"name":"Prima.Pyxis.ListChooser.ListChooser","comment":" Creates a List of ChooserItems component.\n\n\n# Configuration\n\n@docs Config, State, Msg, ChooserItem, ViewMode\n\n\n# Configuration Helpers\n\n@docs config, init, update\n\n\n# Helpers\n\n@docs createItem, viewMode, viewModeAll, viewModePartial\n\n\n# Render\n\n@docs render\n\n","unions":[{"name":"ChooserItem","comment":" Represents a single item which can be selected via ListChooser's api.\n","args":[],"cases":[]},{"name":"Config","comment":" Represents the configuration of the component.\n","args":[],"cases":[]},{"name":"Msg","comment":" Represents an internal Msg for the component.\n","args":[],"cases":[]},{"name":"State","comment":" Represents the component State.\n","args":[],"cases":[]},{"name":"ViewMode","comment":" Defines the mode in which the list must be shown. It's possible to choose\nbetween the full list of items (`viewModeAll`) or a limited set of items (viewModePartial).\nIn this case the number of items to be shown is expressed via `itemsPerView`.\n","args":[],"cases":[]}],"aliases":[],"values":[{"name":"config","comment":" Creates the configuration of the ListChooser.\n\n    ...\n\n    myConfig : ListChooser.Config\n    myConfig =\n        let\n            itemsPerView =\n                5\n\n            viewAllLabel =\n                \"Show all\"\n\n            viewPartialLabel =\n                \"Show first \" ++ (String.fromInt itemsPerView) ++ \" elements\"\n        in\n        ListChooser.config itemsPerView viewAllLabel viewPartialLabel\n\n    ...\n\n","type":"Basics.Int -> String.String -> String.String -> Prima.Pyxis.ListChooser.ListChooser.Config"},{"name":"createItem","comment":" Creates a representation of a ChooserItem.\n\n    ...\n\n    myItem : ListChooser.ChooserItem\n    myItem =\n        let\n            slug =\n                \"my_item_slug\"\n\n            content =\n                \"Lorem ipsum dolor sit amet.\"\n\n            isSelected =\n                False\n        in\n        ListChooser.createItem slug content isSelected\n\n    ...\n\n","type":"Prima.Pyxis.ListChooser.ListChooser.Slug -> String.String -> Basics.Bool -> Prima.Pyxis.ListChooser.ListChooser.ChooserItem"},{"name":"init","comment":" Creates the first instance of a ListChooser.\n","type":"Prima.Pyxis.ListChooser.ListChooser.ViewMode -> List.List Prima.Pyxis.ListChooser.ListChooser.ChooserItem -> ( Prima.Pyxis.ListChooser.ListChooser.State, Platform.Cmd.Cmd Prima.Pyxis.ListChooser.ListChooser.Msg )"},{"name":"render","comment":" Renders the component by receiving a State and a Config.\n","type":"Prima.Pyxis.ListChooser.ListChooser.State -> Prima.Pyxis.ListChooser.ListChooser.Config -> Html.Html Prima.Pyxis.ListChooser.ListChooser.Msg"},{"name":"update","comment":" Updates the State of the component. Used by the parent application to\ndispatch messages to this component.\n","type":"Prima.Pyxis.ListChooser.ListChooser.Msg -> Prima.Pyxis.ListChooser.ListChooser.State -> ( Prima.Pyxis.ListChooser.ListChooser.State, Platform.Cmd.Cmd Prima.Pyxis.ListChooser.ListChooser.Msg )"},{"name":"viewMode","comment":" Sets the new ViewMode by updating the State.\n","type":"Prima.Pyxis.ListChooser.ListChooser.ViewMode -> Prima.Pyxis.ListChooser.ListChooser.State -> Prima.Pyxis.ListChooser.ListChooser.State"},{"name":"viewModeAll","comment":" Retrieves the all ViewMode constructor.\n","type":"Prima.Pyxis.ListChooser.ListChooser.ViewMode"},{"name":"viewModePartial","comment":" Retrieves the partial ViewMode constructor.\n","type":"Prima.Pyxis.ListChooser.ListChooser.ViewMode"}],"binops":[]},{"name":"Prima.Pyxis.Message.Message","comment":" Creates a Message component by using predefined Html syntax.\n\n\n# Configuration\n\n@docs Config\n\n\n# Configuration Helpers\n\n@docs messageErrorConfig, messageInfoConfig, messageSuccessConfig\n\n\n# Render\n\n@docs render\n\n","unions":[{"name":"Config","comment":" Represents the config of a Message\n","args":["msg"],"cases":[]}],"aliases":[],"values":[{"name":"messageErrorConfig","comment":" Defines the configuration of an Error message.\n","type":"List.List (Html.Html msg) -> Prima.Pyxis.Message.Message.Config msg"},{"name":"messageInfoConfig","comment":" Defines the configuration of an Info message.\n","type":"List.List (Html.Html msg) -> Prima.Pyxis.Message.Message.Config msg"},{"name":"messageSuccessConfig","comment":" Defines the configuration of a Success message.\n","type":"List.List (Html.Html msg) -> Prima.Pyxis.Message.Message.Config msg"},{"name":"render","comment":" Renders the Message by receiving it's Config.\n","type":"Prima.Pyxis.Message.Message.Config msg -> Html.Html msg"}],"binops":[]},{"name":"Prima.Pyxis.Table.Table","comment":" Creates a customizable Table component by using predefined Html syntax.\n\n\n# Configuration\n\n@docs Config, State, Header, Row, Column\n\n\n# Configuration Helpers\n\n@docs config, initialState\n\n\n# Configuration for Rows & Headers\n\n@docs header, row\n\n\n# Configuration for Columns\n\n@docs columnFloat, columnHtml, columnInteger, columnString\n\n\n# Helpers\n\n@docs sortByAsc, sortByDesc, sortByNothing\n\n\n# Render\n\n@docs render\n\n","unions":[{"name":"Column","comment":" Represents a Column which can manage a specific kind of data.\n","args":["msg"],"cases":[]},{"name":"Config","comment":" Represents the static configuration of the component.\n","args":["msg"],"cases":[]},{"name":"Header","comment":" Represents an Header of the table. It's gonna be rendered as a <th/> tag.\n","args":["msg"],"cases":[]},{"name":"Row","comment":" Represents a Row which contains a list of Columns.\n","args":["msg"],"cases":[]},{"name":"State","comment":" Represents the basic state of the component.\n","args":[],"cases":[]}],"aliases":[],"values":[{"name":"columnFloat","comment":" Creates a Column which content is Float primitive.\n","type":"Basics.Float -> Prima.Pyxis.Table.Table.Column msg"},{"name":"columnHtml","comment":" Creates a Column which content is Html.\n","type":"List.List (Html.Html msg) -> Prima.Pyxis.Table.Table.Column msg"},{"name":"columnInteger","comment":" Creates a Column which content is Integer primitive.\n","type":"Basics.Int -> Prima.Pyxis.Table.Table.Column msg"},{"name":"columnString","comment":" Creates a Column which content is String primitive.\n","type":"String.String -> Prima.Pyxis.Table.Table.Column msg"},{"name":"config","comment":" Returns the config of the component.\n\n    ...\n\n    type Msg =\n        SortBy String\n    ...\n\n    myTableConfig : Table.Config\n    myTableConfig =\n        let\n            headers : List (Table.Header Msg)\n            headers =\n                List.map (\\content -> Table.header (String.toLower content) content SortBy) [ \"Country\", \"Capital city\" ]\n\n            rows : List (Table.Row Msg)\n            rows =\n                List.map (Table.row << List.map Table.columnString ) [ [\"Italy\", \"Rome\"], [\"France\", \"Paris\"], [\"U.K.\", \"London\"] ]\n\n            alternateRows =\n                True\n\n            isSortable =\n                True\n        in\n        Table.config headers rows alternateRows isSortable\n\n    ...\n\n","type":"List.List (Prima.Pyxis.Table.Table.Header msg) -> List.List (Prima.Pyxis.Table.Table.Row msg) -> Basics.Bool -> Basics.Bool -> Prima.Pyxis.Table.Table.Config msg"},{"name":"header","comment":"\n\n\n## Creates and Header.\n\n    myHeader : String -> String -> (String -> Msg) -> Table.Header Msg\n    myHeader slug content sortByTagger =\n        Table.header slug content sortByTagger\n\n","type":"Prima.Pyxis.Table.Table.Slug -> Prima.Pyxis.Table.Table.Name -> (Prima.Pyxis.Table.Table.Slug -> msg) -> Prima.Pyxis.Table.Table.Header msg"},{"name":"initialState","comment":" Creates an initial State with no sort applied.\n","type":"Prima.Pyxis.Table.Table.State"},{"name":"render","comment":" Renders a Table by receiving a State and a Config\n","type":"Prima.Pyxis.Table.Table.State -> Prima.Pyxis.Table.Table.Config msg -> Html.Html msg"},{"name":"row","comment":" Creates a Row\n\n    myRow : List (Column Msg) -> Table.Row Msg\n    myRow columns =\n        Table.row columns\n\n","type":"List.List (Prima.Pyxis.Table.Table.Column msg) -> Prima.Pyxis.Table.Table.Row msg"},{"name":"sortByAsc","comment":" Sorts the column defined by Slug in Asc order.\n","type":"Prima.Pyxis.Table.Table.Slug -> Prima.Pyxis.Table.Table.State -> Prima.Pyxis.Table.Table.State"},{"name":"sortByDesc","comment":" Sorts the column defined by Slug in Desc order.\n","type":"Prima.Pyxis.Table.Table.Slug -> Prima.Pyxis.Table.Table.State -> Prima.Pyxis.Table.Table.State"},{"name":"sortByNothing","comment":" Unsets sorting for any column.\n","type":"Prima.Pyxis.Table.Table.Slug -> Prima.Pyxis.Table.Table.State -> Prima.Pyxis.Table.Table.State"}],"binops":[]}]